import { NestFactory } from '@nestjs/core'; // Import NestFactory ƒë·ªÉ t·∫°o app
import { AppModule } from './app.module'; // Import module root
import { ValidationPipe } from '@nestjs/common'; // Import ValidationPipe
import { ConfigService } from '@nestjs/config'; // Import ConfigService
import { ApiExceptionFilter } from './common/filters/http-exception.filter'; // Import filter l·ªói

async function bootstrap() {
  const app = await NestFactory.create(AppModule, { cors: true }); // T·∫°o app v·ªõi CORS b·∫≠t
  const configService = app.get(ConfigService); // L·∫•y ConfigService

  app.setGlobalPrefix('api'); // Gi·ªØ prefix /api
  app.useGlobalFilters(new ApiExceptionFilter()); // √Åp d·ª•ng filter l·ªói
  app.useGlobalPipes(new ValidationPipe({ // √Åp d·ª•ng ValidationPipe
    transform: true, // Transform DTO
    whitelist: true, // Lo·∫°i b·ªè field kh√¥ng h·ª£p l·ªá
    forbidUnknownValues: true, // Throw l·ªói field l·∫°
  }));

  const port = configService.get<number>('app.port') ?? 3000; // L·∫•y port
  await app.listen(port); // Kh·ªüi ƒë·ªông server
  console.log(`üöÄ ${configService.get('app.name')} running at http://localhost:${port}/api`); // Log URL
}
bootstrap(); // G·ªçi bootstrap